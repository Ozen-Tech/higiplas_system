// Script para debugar qual URL a API est√° usando no frontend
// Execute no console do browser na p√°gina do frontend

console.log('üîç Debug da configura√ß√£o da API');
console.log('Environment:', process.env.NODE_ENV);
console.log('NEXT_PUBLIC_API_URL:', process.env.NEXT_PUBLIC_API_URL);

// Tenta importar o apiService para ver a URL base
try {
  // Se estiver no browser, pode n√£o funcionar, mas vale a tentativa
  const apiService = require('./src/services/apiService');
  console.log('API Service baseURL:', apiService.baseURL);
} catch (e) {
  console.log('N√£o foi poss√≠vel importar apiService no browser');
}

// Verifica se h√° fetch interceptado
if (window.fetch.toString().includes('native')) {
  console.log('‚úÖ Fetch nativo sendo usado');
} else {
  console.log('‚ö†Ô∏è Fetch foi interceptado/modificado');
}

// Testa uma requisi√ß√£o simples
fetch('/api/test-url')
  .then(response => {
    console.log('Teste de fetch local funcionou');
  })
  .catch(error => {
    console.log('Erro no teste de fetch local:', error);
  });

console.log('\nüí° Para testar manualmente:');
console.log('1. Abra o Network tab do DevTools');
console.log('2. Tente fazer uma a√ß√£o que falha (excluir/editar cliente)');
console.log('3. Verifique para qual URL a requisi√ß√£o est√° sendo enviada');
console.log('4. Verifique os headers da requisi√ß√£o');